/*
 * Option_Set_NonWeaponProfs.java
 *
 * Created on __DATE__, __TIME__
 */

package org.ost.main;

import java.util.ArrayList;
import java.util.List;

import javax.swing.DefaultListModel;
import javax.swing.JList;

import org.ost.main.MyClasses.MyCellRendererList;
import org.ost.main.MyClasses.NonWeaponProfClass;
import org.ost.main.MyClasses.NonWeaponProfList;
import org.ost.main.MyClasses.RaceClass;
import org.ost.main.MyClasses.RaceList;
import org.ost.main.MyUtils.SimpleDialog;

/**
 *
 * @author  __USER__
 */
public class Option_Set_NonWeaponProfs extends javax.swing.JDialog {
	private MainClass ost;
	private java.awt.Frame parent;
	private ArrayList<NonWeaponProfClass> eCurrent;
	private NonWeaponProfList eList;

	/** Creates new form Option_Set_Race */
	public Option_Set_NonWeaponProfs(java.awt.Frame parent, boolean modal,
			MainClass ost, ArrayList<NonWeaponProfClass> setCurrent) {
		super(parent, modal);
		this.parent = parent;
		this.ost = ost;
		this.eCurrent = setCurrent;
		this.eList = ost.nonWeaponProfList;
		initComponents();

		extraAllowedModel = new DefaultListModel<>();
		extraAllowedList.setModel(extraAllowedModel);
		extraAllowedList.setCellRenderer(new MyCellRendererList());

		extraListModel = new DefaultListModel<>();
		extraListList.setModel(extraListModel);
		extraListList.setCellRenderer(new MyCellRendererList());

		updateAllowed(extraAllowedList, eCurrent);
		updateList(extraListList, eList);

		setLocationRelativeTo(parent);
		
		pack();
	}

	private void updateList(JList list, NonWeaponProfList aList) {
		DefaultListModel model = (DefaultListModel) list.getModel();
		Object oSelected = list.getSelectedValue();
		model.removeAllElements();

		for (Object o : aList.getContent())
			if (!eCurrent.contains(o)) // do not add objects we already have in allowed
				model.addElement(o);

		if ((oSelected == null || !model.contains(oSelected))
				&& model.getSize() > 0) {
			oSelected = model.getElementAt(0);
		}

		if (oSelected != null)
			list.setSelectedValue(oSelected, true);
	}

	private void updateAllowed(JList list, ArrayList<NonWeaponProfClass> aList) {
		DefaultListModel model = (DefaultListModel) list.getModel();
		Object oSelected = list.getSelectedValue();
		model.removeAllElements();
		for (Object o : aList)
			model.addElement(o);
		if ((oSelected == null || !model.contains(oSelected))
				&& model.getSize() > 0) {
			oSelected = model.getElementAt(0);
		}
		if (oSelected != null)
			list.setSelectedValue(oSelected, true);
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	//GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {
		java.awt.GridBagConstraints gridBagConstraints;

		mainPanel = new javax.swing.JPanel();
		extraAllowedPanel = new javax.swing.JPanel();
		jScrollPane1 = new javax.swing.JScrollPane();
		extraAllowedList = new javax.swing.JList();
		extraAllowedButtonPanel = new javax.swing.JPanel();
		extraAllowedRemoveButton = new javax.swing.JButton();
		extraAdjustPanel = new javax.swing.JPanel();
		extraAddToAllowedButton = new javax.swing.JButton();
		extraRemoveFromAllowedButton = new javax.swing.JButton();
		extraAddPanel = new javax.swing.JPanel();
		jScrollPane2 = new javax.swing.JScrollPane();
		extraListList = new javax.swing.JList();
		extraAllowedButtonPanel1 = new javax.swing.JPanel();
		extraModifyButton = new javax.swing.JButton();
		extraButtonPanel = new javax.swing.JPanel();
		extraDoneButton = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setTitle("Set Race");
		addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowActivated(java.awt.event.WindowEvent evt) {
				formWindowActivated(evt);
			}
		});

		mainPanel.setBackground(new java.awt.Color(153, 153, 153));
		mainPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(
				new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0),
						1, true), "Non-Weapon Proficiencies",
				javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION,
				javax.swing.border.TitledBorder.DEFAULT_POSITION,
				new java.awt.Font("Segoe UI", 0, 12)));

		extraAllowedPanel.setBackground(new java.awt.Color(153, 153, 153));
		extraAllowedPanel.setBorder(javax.swing.BorderFactory
				.createTitledBorder(new javax.swing.border.LineBorder(
						new java.awt.Color(0, 0, 0), 1, true), "Allowed",
						javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION,
						javax.swing.border.TitledBorder.DEFAULT_POSITION,
						new java.awt.Font("Segoe UI", 0, 10)));
		extraAllowedPanel.setLayout(new java.awt.BorderLayout());

		jScrollPane1.setViewportView(extraAllowedList);

		extraAllowedPanel.add(jScrollPane1, java.awt.BorderLayout.CENTER);

		extraAllowedButtonPanel
				.setBackground(new java.awt.Color(204, 204, 204));
		extraAllowedButtonPanel.setBorder(javax.swing.BorderFactory
				.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

		extraAllowedRemoveButton.setFont(new java.awt.Font("Segoe UI", 0, 10));
		extraAllowedRemoveButton.setText("remove");
		extraAllowedRemoveButton
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						extraAllowedRemoveButtonActionPerformed(evt);
					}
				});
		extraAllowedButtonPanel.add(extraAllowedRemoveButton);

		extraAllowedPanel.add(extraAllowedButtonPanel,
				java.awt.BorderLayout.PAGE_END);

		extraAdjustPanel.setBackground(new java.awt.Color(204, 204, 204));
		extraAdjustPanel.setBorder(javax.swing.BorderFactory
				.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
		extraAdjustPanel.setLayout(new java.awt.GridBagLayout());

		extraAddToAllowedButton.setFont(new java.awt.Font("Segoe UI", 0, 8));
		extraAddToAllowedButton.setIcon(new javax.swing.ImageIcon(getClass()
				.getResource("/images/Arrow-Left-icon-16.png"))); // NOI18N
		extraAddToAllowedButton.setToolTipText("Add ability to allowed.");
		extraAddToAllowedButton.setBorder(javax.swing.BorderFactory
				.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
		extraAddToAllowedButton
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						extraAddToAllowedButtonActionPerformed(evt);
					}
				});
		extraAdjustPanel.add(extraAddToAllowedButton,
				new java.awt.GridBagConstraints());

		extraRemoveFromAllowedButton
				.setFont(new java.awt.Font("Segoe UI", 0, 8));
		extraRemoveFromAllowedButton.setIcon(new javax.swing.ImageIcon(
				getClass().getResource("/images/Arrow-Right-icon-16.png"))); // NOI18N
		extraRemoveFromAllowedButton
				.setToolTipText("Remove ability from allowed list.");
		extraRemoveFromAllowedButton.setBorder(javax.swing.BorderFactory
				.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
		extraRemoveFromAllowedButton
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						extraRemoveFromAllowedButtonActionPerformed(evt);
					}
				});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		extraAdjustPanel.add(extraRemoveFromAllowedButton, gridBagConstraints);

		extraAddPanel.setBackground(new java.awt.Color(153, 153, 153));
		extraAddPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(
				new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0),
						1, true), "Available",
				javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION,
				javax.swing.border.TitledBorder.DEFAULT_POSITION,
				new java.awt.Font("Segoe UI", 0, 10)));
		extraAddPanel.setLayout(new java.awt.BorderLayout());

		jScrollPane2.setViewportView(extraListList);

		extraAddPanel.add(jScrollPane2, java.awt.BorderLayout.CENTER);

		extraAllowedButtonPanel1
				.setBackground(new java.awt.Color(204, 204, 204));
		extraAllowedButtonPanel1.setBorder(javax.swing.BorderFactory
				.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

		extraModifyButton.setFont(new java.awt.Font("Segoe UI", 0, 10));
		extraModifyButton.setText("create/modify");
		extraModifyButton
				.setToolTipText("Add, delete or create a new extra-ability.");
		extraModifyButton
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						extraModifyButtonActionPerformed(evt);
					}
				});
		extraAllowedButtonPanel1.add(extraModifyButton);

		extraAddPanel.add(extraAllowedButtonPanel1,
				java.awt.BorderLayout.PAGE_END);

		javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(
				mainPanel);
		mainPanel.setLayout(mainPanelLayout);
		mainPanelLayout.setHorizontalGroup(mainPanelLayout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				mainPanelLayout
						.createSequentialGroup()
						.addComponent(extraAllowedPanel,
								javax.swing.GroupLayout.DEFAULT_SIZE, 128,
								Short.MAX_VALUE)
						.addGap(0, 0, 0)
						.addComponent(extraAdjustPanel,
								javax.swing.GroupLayout.PREFERRED_SIZE, 25,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(0, 0, 0)
						.addComponent(extraAddPanel,
								javax.swing.GroupLayout.DEFAULT_SIZE, 125,
								Short.MAX_VALUE)));
		mainPanelLayout.setVerticalGroup(mainPanelLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						mainPanelLayout
								.createSequentialGroup()
								.addGap(0, 0, 0)
								.addComponent(extraAdjustPanel,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										264, Short.MAX_VALUE))
				.addComponent(extraAddPanel,
						javax.swing.GroupLayout.DEFAULT_SIZE, 264,
						Short.MAX_VALUE)
				.addComponent(extraAllowedPanel,
						javax.swing.GroupLayout.Alignment.TRAILING,
						javax.swing.GroupLayout.DEFAULT_SIZE, 264,
						Short.MAX_VALUE));

		getContentPane().add(mainPanel, java.awt.BorderLayout.CENTER);

		extraButtonPanel.setBackground(new java.awt.Color(204, 204, 204));
		extraButtonPanel.setBorder(javax.swing.BorderFactory
				.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

		extraDoneButton.setFont(new java.awt.Font("Segoe UI", 0, 12));
		extraDoneButton.setText("done");
		extraDoneButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				extraDoneButtonActionPerformed(evt);
			}
		});
		extraButtonPanel.add(extraDoneButton);

		getContentPane().add(extraButtonPanel, java.awt.BorderLayout.PAGE_END);

		pack();
	}// </editor-fold>
	//GEN-END:initComponents

	private void extraAllowedRemoveButtonActionPerformed(
			java.awt.event.ActionEvent evt) {
		List oSelect = extraAllowedList.getSelectedValuesList();
		boolean bDelete = false;
		if (!oSelect.isEmpty()) {
			for (Object oSelected : oSelect)
				if (oSelected != null) {
					NonWeaponProfClass o = (NonWeaponProfClass) oSelected;
					String sRem = oSelect.size() > 1 ? "all selected" : o
							.getName();
					if (bDelete
							|| SimpleDialog.AskYN(this, "Remove " + sRem + "?")) {
						bDelete = true;
						eCurrent.remove(o);
						extraAllowedModel.removeElement(o);
					}
				}
			updateAllowed(extraAllowedList, eCurrent);
			updateList(extraListList, eList);
		}
	}

	private void extraAddToAllowedButtonActionPerformed(
			java.awt.event.ActionEvent evt) {
		List oSelect = extraListList.getSelectedValuesList();
		if (!oSelect.isEmpty()) {
			for (Object oNew : oSelect)
				//		Object oNew = extraListList.getSelectedValue();
				if (oNew != null && !eCurrent.contains(oNew)) {
					eCurrent.add((NonWeaponProfClass) oNew);
				}
			updateAllowed(extraAllowedList, eCurrent);
			updateList(extraListList, eList);
		}

	}

	private void extraRemoveFromAllowedButtonActionPerformed(
			java.awt.event.ActionEvent evt) {
		extraAllowedRemoveButtonActionPerformed(evt);
	}

	private void extraModifyButtonActionPerformed(java.awt.event.ActionEvent evt) {
		Option_List_NonWeaponProfs dDialog = new Option_List_NonWeaponProfs(parent, true, ost);
		dDialog.setVisible(true);

		//update the list of abilities with the new/edit versions
		updateList(extraListList, eList);
	}

	private void extraDoneButtonActionPerformed(java.awt.event.ActionEvent evt) {
		formWindowActivated(null);
		setVisible(false);
	}

	private void formWindowActivated(java.awt.event.WindowEvent evt) {
		// TODO add your handling code here:
	}

	//GEN-BEGIN:variables
	// Variables declaration - do not modify
	private javax.swing.JPanel extraAddPanel;
	private javax.swing.JButton extraAddToAllowedButton;
	private javax.swing.JPanel extraAdjustPanel;
	private javax.swing.JPanel extraAllowedButtonPanel;
	private javax.swing.JPanel extraAllowedButtonPanel1;
	private javax.swing.JList extraAllowedList;
	private javax.swing.JPanel extraAllowedPanel;
	private javax.swing.JButton extraAllowedRemoveButton;
	private javax.swing.JPanel extraButtonPanel;
	private javax.swing.JButton extraDoneButton;
	private javax.swing.JList extraListList;
	private javax.swing.JButton extraModifyButton;
	private javax.swing.JButton extraRemoveFromAllowedButton;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JPanel mainPanel;
	// End of variables declaration//GEN-END:variables
	private DefaultListModel extraAllowedModel;
	private DefaultListModel extraListModel;

}